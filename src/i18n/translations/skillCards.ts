import type { TechSkill } from '@collections/techSkills';

export const skillCards = {
  en: {
    accessibility:
      '<p data-with-cutout="true"><i>Strong commitment to creating inclusive digital experiences accessible to all users.</i></p><br/><p>Prioritize building accessible components using proper  <strong>semantic HTML </strong> and  <strong>ARIA attributes </strong>, with hands-on testing experience using screen readers including  <strong>JAWS </strong>,  <strong>NVDA </strong>, and  <strong>VoiceOver for macOS </strong>.</p>',
    algolia:
      '<p data-with-cutout="true"><i>Practical experience implementing search functionality in both professional environments and personal projects.</i></p><br/><p>Proficient with  <strong>Algolia’s React InstantSearch </strong> components and the  <strong>Algolia WordPress plugin </strong>, creating  <strong>intuitive search experiences </strong> with features like  <strong>faceted filtering </strong>,  <strong>query suggestions </strong>, and  <strong>custom result displays </strong> to enhance user engagement and data discoverability.</p>',
    ['apollo-client']:
      '<p data-with-cutout="true"><i>Extensive professional experience with Apollo Client for GraphQL data management.</i></p><br/><p>Deep knowledge of  <strong>state management </strong>,  <strong>caching strategies </strong>, and  <strong>query optimization </strong> within React applications. Proficient with  <strong>custom hooks </strong>,  <strong>in-memory cache management </strong>, and handling  <strong>complex data requirements </strong> including pagination, and mutations with cache updates.</p>',
    astro:
      '<p data-with-cutout="true"><i>Hands-on experience using Astro for building fast, content-driven websites — including my own developer portfolio.</i></p><br/><p>Appreciate Astro’s  <strong>islands architecture </strong>,  <strong>zero-JS by default </strong> approach, and tight integration with modern frontend frameworks like React. Have worked with  <strong>Astro components </strong>,  <strong>routing </strong>, and  <strong>build optimizations </strong> to deliver performant, maintainable pages.</p><br/><p>Strong fan of Astro’s developer experience and its alignment with modern web best practices — especially for content-heavy or static-first sites.</p>',
    bash: '<p data-with-cutout="true"><i>Basic working knowledge of Bash scripting for automation and build     processes.</i></p><br/><p>Experience creating  <strong>utility scripts </strong> primarily for  <strong>Docker image generation </strong> and  <strong>CI/CD pipeline automation </strong> in personal projects. Familiar with  <strong>environment configuration </strong>,  <strong>file manipulation </strong>, and basic  <strong>process management </strong> to support development workflows.</p><br/><p>Focused on practical, straightforward scripting for  <strong>infrastructure tasks </strong> rather than complex system programming.</p>',
    css: '<p data-with-cutout="true"><i>Strong hands-on experience with modern CSS — from foundational layout techniques to cutting-edge features.</i></p><br/><p>Well-versed in  <strong>flexbox </strong>,  <strong>grid </strong>, and modern  <strong>scoping strategies </strong>. Actively follow CSS spec updates and browser support to responsibly adopt new features, while maintaining  <strong>accessibility </strong> and  <strong>progressive enhancement </strong> best practices.</p><br/><p>I have a solid understanding of  <strong>cascading </strong> and  <strong>inheritance </strong>, but I prioritize a  <strong>scoped, local-first styling approach </strong> to avoid the complexity and fragility of global styles.</p>',
    docker:
      '<p data-with-cutout="true"><i>Practical experience with Docker for both professional work and personal projects.</i></p><br/><p>Professionally used  <strong>Docker Compose </strong> for local development environments and backend services. For personal projects, experienced with  <strong>building custom Docker images </strong>,  <strong>optimizing container size </strong>, and implementing  <strong>multi-stage builds </strong> for efficient deployment pipelines.</p><br/><p>Familiar with  <strong>container networking </strong>,  <strong>volume management </strong>, and  <strong>environment configuration </strong> to create consistent, reproducible environments across different stages of development.</p>',
    figma:
      '<p data-with-cutout="true"><i>Experienced in working with Figma, both as a developer implementing designs, and in designing personal projects.</i></p><br/><p>Comfortable interpreting professional designers’  <strong>design systems </strong>,  <strong>component specifications </strong> and  <strong>interactive prototypes </strong>. For personal projects, capable of creating  <strong>basic designs </strong> and  <strong>functional prototypes </strong> with interactive elements including  <strong>transitions </strong> and  <strong>responsive layouts </strong>.</p><br/><p>Value Figma’s  <strong>component-based approach </strong> that aligns well with modern frontend development workflows, particularly in React ecosystems.</p>',
    gatsby:
      '<p data-with-cutout="true"><i>Extensive experience with Gatsby.js through both professional work and personal projects.</i></p><br/><p>Skilled in developing  <strong>maintainable static sites </strong> with optimized  <strong>performance </strong>, implementing advanced features including  <strong>internationalization </strong>,  <strong>SEO optimization </strong>,  <strong>plugin integration </strong>, and  <strong>serverless functions </strong>.</p><br/><p>While maintaining strong Gatsby expertise, I now recommend modern alternatives like  <strong>Astro </strong> for new projects due to Gatsby’s deprecated status.</p>',
    git: '<p data-with-cutout="true"><i>Daily Git user with solid experience collaborating in team-based workflows.</i></p><br/><p>Comfortable working with both  <strong>merge-based </strong> and  <strong>rebase-based </strong> strategies depending on team preferences. Experienced in managing  <strong>feature branches </strong>, resolving  <strong>merge conflicts </strong>, and maintaining a clean, understandable commit history.</p><br/><p>Use Git confidently for  <strong>code reviews </strong>,  <strong>collaboration </strong>, and  <strong>version control </strong> in both solo and team projects.</p>',
    github:
      '<p data-with-cutout="true"><i>Experienced using GitHub for both collaboration and automation in personal and team projects.</i></p><br/><p>Primarily experienced with  <strong>GitLab </strong> in professional settings, but have hands-on experience using  <strong>GitHub Actions </strong> to build and manage  <strong>CI pipelines </strong> in personal projects. Familiar with  <strong>workflows </strong> for testing, deployment, and code quality checks.</p><br/><p>Use GitHub regularly for  <strong>version control </strong>,  <strong>pull request workflows </strong>, and as a central place for managing  <strong>open source </strong> and personal codebases.</p>',
    gitlab:
      '<p data-with-cutout="true"><i>Extensive professional experience using GitLab as a daily development platform.</i></p><br/><p>Routinely worked with  <strong>GitLab repositories </strong>,  <strong>merge requests </strong>, and  <strong>issue tracking </strong> as part of team-based workflows. Comfortable navigating GitLab’s interface and collaborating through  <strong>code reviews </strong>, and  <strong>branch management </strong>.</p><br/><p>Familiar with  <strong>GitLab CI/CD pipelines </strong> from a user perspective — running jobs, reading logs, and working within existing workflows — though not directly responsible for pipeline authoring or maintenance.</p>',
    graphql:
      '<p data-with-cutout="true"><i>Extensive experience using GraphQL from the frontend side in modern web applications.</i></p><br/><p>Routinely work with  <strong>queries </strong>,  <strong>mutations </strong>, and  <strong>fragments </strong> — often in combination with tools like  <strong>GraphiQL </strong> and  <strong>GraphQL Explorer </strong> to inspect schemas and test operations.</p><br/><p>Comfortable navigating complex schemas, composing nested queries, and leveraging best practices for client-side performance and maintainability.</p>',
    ['graphql-codegen']:
      '<p data-with-cutout="true"><i>Extensive experience using, configuring, and maintaining GraphQL Code Generator across diverse codebases.</i></p><br/><p>Hands-on experience with  <strong>setup and configuration </strong> of GraphQL Code Generator, including generation of  <strong>TypeScript types </strong>,  <strong>TypedDocumentNode </strong>, and  <strong>operation-specific hooks </strong>.</p><br/><p>Strong focus on  <strong>fragment structure </strong>, naming consistency, and scalable file organization — ensuring maintainability as the API surface grows.</p>',
    html: '<p data-with-cutout="true"><i>Strong proficiency in HTML with a focus on semantics, structure, and long-term maintainability.</i></p><br/><p>I use  <strong>semantic elements </strong> by default to ensure clarity in markup and support  <strong>accessibility best practices </strong>. Comfortable working with  <strong>modern HTML features </strong> and  <strong>responsive layout patterns </strong> across a wide range of project types.</p>',
    inkscape:
      '<p data-with-cutout="true"><i>InkScape is a free Open Source software application that closely resembles Adobe Illustrator.<br /><br />Experienced using Inkscape for creating vector graphics such as icons, logos, and custom illustrations — especially for the web.</i></p><br/><p>I often combine Inkscape with Figma when working on visuals for personal projects, taking advantage of Inkscape’s direct  <strong>SVG workflow </strong> and Figma’s layout capabilities.</p><br/><p>Comfortable  <strong>optimizing SVGs </strong> for performance and seamless integration in frontend codebases.</p>',
    javascript:
      '<p data-with-cutout="true"><i>Experienced in working with JavaScript as a core part of my development process, though typically through TypeScript compilation.</i></p><br/><p>Comfortable with  <strong>JavaScript’s fundamentals </strong> and its ecosystem, with a strong knowledge of  <strong>modern ES6+ </strong> features and  <strong>web APIs </strong>. I leverage this knowledge to ensure  <strong>maintainable </strong> and  <strong>performant </strong> solutions while working across various  <strong>libraries </strong>,  <strong>frameworks </strong>, and  <strong>tools </strong>.</p><br/><p>Although I mainly write in  <strong>TypeScript </strong> for its  <strong>strong typing </strong> and  <strong>tooling advantages </strong>, I often interact with  <strong>JavaScript </strong> directly when working with  <strong>libraries </strong>,  <strong>frameworks </strong>, and  <strong>APIs </strong> that require it.</p>',
    jest: '<p data-with-cutout="true"><i>Solid experience with automated unit testing using Jest and React Testing Library.</i></p><br/><p>Proficient in comprehensive  <strong>test coverage </strong> for React- and React Native components, including  <strong>module mocking </strong>,  <strong>snapshot testing </strong>, and  <strong>integration testing </strong> with various state management and service layers. Experienced with  <strong>test-driven development </strong> practices and  <strong>continuous integration </strong> workflows.</p>',
    mantine:
      '<p data-with-cutout="true"><i>Extensive experience working with the Mantine component library for React applications.</i></p><br/><p>Proficient in  <strong>implementing </strong> and  <strong>customizing </strong> Mantine UI components to create polished user interfaces. Skilled at utilizing Mantine’s  <strong>hook library </strong> for common UI patterns and leveraging its  <strong>theming system </strong> for consistent design implementation across applications</p>',
    nextjs:
      '<p data-with-cutout="true"><i>Professional experience using Next.js combines with some experience from a personal project.</i></p><br/><p>Skilled with both the traditional  <strong>Pages Router </strong> in production environments and the modern  <strong>App Router </strong> architecture. Experience implementing  <strong>Server Components </strong>,  <strong>Server Actions </strong>, and leveraging Next.js for  <strong>SSR </strong>,  <strong>SSG </strong>, and  <strong>ISR </strong> rendering strategies. <br/><br/>Proficient at building  <strong>performant </strong> and  <strong>SEO-optimized </strong> React applications with Next.js’s full-stack capabilities.</p>',
    playwright:
      '<p data-with-cutout="true"><i>Professional experience with Playwright for creating automated end-to-end tests of user interfaces.</i></p><br/><p> <strong>Comfortable </strong> designing and maintaining  <strong>UI test suites </strong> that simulate real user interactions to ensure functionality, reliability, and regression safety across application updates.</p><br/><p>Use Playwright in  <strong>collaborative workflows </strong> with developers and QA, integrating it into CI pipelines for consistent feedback and test coverage in production-grade projects.</p>',
    react:
      '<p data-with-cutout="true"><i>Comprehensive professional experience with React across various large-scale projects.</i></p><br/><p>Proficient in the full React ecosystem spanning  <strong>Class components </strong> to modern  <strong>Server Components </strong>, with extensive knowledge of  <strong>hooks </strong>,  <strong>TypeScript </strong> integration, various  <strong>styling approaches </strong>, and  <strong>performance optimization </strong> techniques.<p></p>',
    ['react-native']:
      '<p data-with-cutout="true"><i>Professional experience with React Native, primarily focused on building components, writing unit tests with Jest and React Native Testing Library, and working with Storybook and animations.</i><br/><br/>While my <strong>hands-on experience</strong> dates back a few years, I have a solid foundation and would be excited to re-engage with React Native development at some point.</p>',
    ['react-testing-library']:
      '<p data-with-cutout="true"><i>Proficient with React Testing Library for component testing.</i></p><br/><p>Skilled at writing <b>focused unit tests</b> for React components using best practices. Experienced with RTL’s <b>querying methods</b>, <b>user events</b>, and <b>accessibility testing</b> capabilities.<br/><br/>Proficient at creating <b>isolated component tests</b> that verify functionality while allowing flexibility in implementation, reserving end-to-end testing for tools like Playwright.</p>',
    redux:
      '<p data-with-cutout="true"><i>I have hands-on professional experience with <b>classic Redux</b> for managing <b>global application state</b> in production environments.</i></p><br/><p>Familiar with setting up <b>actions</b> and <b>reducers</b> manually, and integrating Redux with React through <b>react-redux</b>.</p><br/><p>I’ve also explored <b>Redux Toolkit</b> in personal projects and appreciate its <b>modernized</b>, opinionated approach to simplifying Redux patterns with less <b>boilerplate</b> — improving overall <b>developer experience</b>.</p>',
    sass: '<p data-with-cutout="true"><i>Extensive experience using Sass/SCSS preprocessor for styling web applications.</i></p><br/><p>Proficient with  <strong>variables </strong>,  <strong>mixins </strong>,  <strong>nesting </strong>, and  <strong>functions </strong> to create maintainable styling systems. Experienced with implementing  <strong>modular architecture </strong> and organizing styles with  <strong>CSS/Sass modules </strong> for scalable codebases.</br></br>While I maintain expertise with Sass, I’ve observed its declining relevance as  <strong>modern CSS features </strong> like native nesting, custom properties, and upcoming native mixins increasingly provide similar functionality without the preprocessing step.</p>',
    storybook:
      '<p data-with-cutout="true"><i>Professional experience with Storybook across various employments.</i></p><br/><p>Skilled in  <strong>isolated component development </strong> for React and React Native, with focus on  <strong>documentation </strong>,  <strong>visual testing </strong>,  <strong>team collaboration </strong> through shared component libraries, and  <strong>design system integration </strong>.</p>',
    ['styled-components']:
      '<p data-with-cutout="true"><i>Extensive experience using styled-components for styling.</i></p><br/><p>Proficient with  <strong>component-based styling </strong>,  <strong>theme systems </strong>, and  <strong>dynamic styling based on props and state </strong> for creating consistent user interfaces with isolated, reusable style patterns.</p><br/><p>However, due to performance benefits, I prefer styling solutions that don’t rely on runtime JavaScript for modern projects.</p>',
    svg: '<p data-with-cutout="true"><i>Regularly work with vectorillustrations and -icons as part of my job, with a strong focus on performance optimization and file size reduction.</i></p><br/><p>Have a solid understanding of how to tweak <b>SVG markup</b> for clean and maintainable output, including accessibility, precision, and reusability.</p><br/><p>In personal projects, I’ve created custom <b>SVG illustrations</b> and <b>animations</b>, often hand-tuning paths and leveraging native browser features for smooth and efficient results.</p>',
    tailwind:
      '<p data-with-cutout="true"><i>Practical experience using Tailwind CSS in production environments.</i></p><br/><p>Proficient with  <strong>utility-first styling </strong>,  <strong>component theming </strong>, and  <strong>responsive design </strong> patterns. Successfully implemented Tailwind in  <strong>large-scale applications </strong> using advanced tooling like  <strong>tailwind-variants </strong> to enhance maintainability and consistency.</p><br/><p>While recognizing both Tailwind’s strengths and limitations, can effectively leverage it when it’s the right tool for the project’s requirements.</p>',
    tanstack:
      '<p data-with-cutout="true"><i>Hands-on professional experience with selected TanStack libraries in real-world projects.</i></p><br/><p>Primarily used <b>TanStack Query</b> for efficient <b>data fetching and caching</b>, <b>TanStack Table</b> for building flexible, headless data tables, and explored <b>TanStack Start</b> in professional settings.</p><br/><p>Appreciate the libraries’ <b>composability</b>, strong <b>TypeScript support</b>, and focus on <b>performance</b> and <b>developer experience</b>.</p>',
    turborepo:
      '<p data-with-cutout="true"><i>Used <b>Turborepo</b> professionally as part of a monorepo setup.</i></p><br/><p>While I haven’t been involved deeply in the initial configuration, I’ve gained <b>practical experience</b> working within a Turborepo-based workspace as part of my daily development workflow — benefiting from its caching, task pipelines, and monorepo coordination.</p>',
    typescript:
      '<p data-with-cutout="true"><i>High-level proficiency with TypeScript in professional and personal projects.</i></p><br/><p>Experienced with  <strong>advanced type systems </strong>,  <strong>generics </strong>,  <strong>utility types </strong>, and  <strong>complex type inference </strong> to create robust, maintainable codebases. Consistently leverage TypeScript’s  <strong>static analysis </strong> for early error detection and superior <strong>developer experience</strong>.</p><br/><p>Advocate for  <strong>strong typing practices </strong> and well-defined  <strong>type architectures </strong> that enhance code quality, documentation, and team collaboration.</p>',
    vite: '<p data-with-cutout="true"><i>Working knowledge of Vite as a modern frontend build tool.</i></p><br/><p>Familiarity with <b>basic Vite setup</b> in professional environments and <b>configuration adjustments</b>. Experience using Vite as the underlying build system for <b>Astro projects</b>. Growing understanding of Vite’s <b>Hot Module Replacement capabilities</b> and <b>plugin architecture</b> for frontend development workflows.</p>',
    vscode:
      '<p data-with-cutout="true"><i>My preferred development environment for writing and debugging code.</i></p><br/><p>Appreciate its  <strong>extensibility </strong>, and  <strong>intuitive interface </strong> that aligns perfectly with my workflow. Particularly value its  <strong>integrated terminal </strong>,  <strong>Git integration </strong>, and  <strong>flexible debugging tools </strong> that adapt to various language environments.</p><br/><p>Continuously refining my setup to balance performance with the specific needs of each project.</p>',
    webpack:
      '<p data-with-cutout="true"><i>Working knowledge of Webpack for frontend bundling with configuration experience.</i></p><br/><p>Experience extending <b>WordPress build configurations</b> and implementing <b>custom entry points</b> for plugin development. Professional experience <b>maintaining Webpack setups</b> in production environments before transitioning to Vite. Familiar with <b>TypeScript integration</b>, <b>SCSS compilation</b>, and <b>output optimization</b>.<br/><br/>While competent with Webpack, I now prefer <b>modern bundlers like Vite</b> for their improved developer experience and performance.</p>',
    wordpress:
      '<p data-with-cutout="true"><i>Practical experience with modern WordPress development in personal projects.</i></p><br/><p>Created complete <b>Docker Compose environments</b> for WordPress development and deployment. Implemented <b>headless WordPress architecture</b> with <b>WP-GraphQL</b>, integrating with <b>Next.js frontend</b> including <b>ISR</b>, <b>preview functionality</b>, and <b>authentication</b>.<br/><br/>Experienced with <b>Gutenberg blocks</b>, <b>custom templates</b>, and <b>third-party integrations</b> (Cloudinary, Algolia). Knowledge of <b>automated WordPress setup</b> using Composer and WP-CLI, though ultimately shifted away from WordPress due to ecosystem limitations.</p>',
    ['wp-graphql']:
      '<p data-with-cutout="true"><i>Detailed experience with WP-GraphQL in headless WordPress applications.</i></p><br/><p>Implemented <b>GraphQL queries</b> for various WordPress content types including <b>pages</b>, <b>posts</b>, <b>menus</b>, and <b>media</b>. Created <b>TypeScript integrations</b> with automatic type generation via GraphQL Code Generator.<br/><br/>Built systems for <b>previewing unpublished content</b>, handling <b>authentication</b>, and managing <b>SEO metadata</b> from Yoast through the GraphQL API.</p>',
  } satisfies Record<TechSkill, string>,
  da: {
    accessibility:
      '<p data-with-cutout="true"><i>Stærkt engagement i at skabe inkluderende digitale oplevelser, der er tilgængelige for alle brugere.</i></p><br/><p>Prioriterer at bygge tilgængelige komponenter ved hjælp af korrekt  <strong>semantisk HTML </strong> og  <strong>ARIA-attributter </strong> med praktisk testerfaring ved hjælp af skærmlæsere, herunder  <strong>JAWS </strong>,  <strong>NVDA </strong> og  <strong>VoiceOver til macOS </strong>.</p>',
    algolia:
      '<p data-with-cutout="true"><i>Praktisk erfaring med at implementere søgefunktionalitet i både professionelle miljøer og personlige projekter.</i></p><br/><p>Erfaring med  <strong>Algolias React InstantSearch-komponenter </strong> og  <strong>Algolia’s WordPress-plugin </strong>, der skaber  <strong>intuitive søgeoplevelser </strong> med funktioner såsom  <strong>facetteret filtrering </strong>,  <strong>forslag til forespørgsler </strong> og  <strong>brugerdefinerede resultatvisninger </strong> for at forbedre brugerengagementet og muligheden for at finde data.</p>',
    ['apollo-client']:
      '<p data-with-cutout="true"><i>Omfattende professionel erfaring med Apollo Client til GraphQL-datahåndtering.</i></p><br/><p>Stor viden om  <strong>state management </strong>,  <strong>caching-strategier </strong> og  <strong>optimering af API-kald </strong> i React-applikationer. Dygtig med  <strong>brugerdefinerede hooks </strong>,  <strong>in-memory cache management </strong> og håndtering af  <strong>komplekse datakrav </strong>, herunder paginering og mutationer.</p>',
    astro:
      '<p data-with-cutout="true"><i>Praktisk erfaring med at bruge Astro til at bygge hurtige, indholdsdrevne hjemmesider — herunder min egen udviklerportefølje.</i></p><br/><p>Sætter pris på Astros  <strong>island-arkitektur </strong>,  <strong>zero-JS som standard </strong> og tætte integration med moderne frontend-frameworks som  <strong>React </strong>. Har arbejdet med  <strong>Astro-komponenter </strong>,  <strong>routing </strong> og  <strong>build-optimeringer </strong> for at levere velfungerende, vedligeholdelsesvenlige sider.</p><br/><p>Stor fan af Astros  <strong>udvikleroplevelse </strong> og dets tilpasning til moderne  <strong>web best practices </strong> — især til indholdstunge eller  <strong>static-first </strong> sider.</p>',
    bash: '<p data-with-cutout="true"><i>Grundlæggende kendskab til Bash-scripting til automatisering og build-processer.</i></p><br/><p>Erfaring med at lave  <strong>utility scripts </strong> primært til  <strong>Docker image generation </strong> og  <strong>CI/CD pipeline automation </strong> i personlige projekter. Fortrolig med  <strong>miljøkonfiguration </strong>,  <strong>fil-manipulation </strong> og  <strong>grundlæggende processtyring </strong> for at understøtte udviklingsarbejdsgange.</p><br/><p>Fokuseret på praktisk, ligetil scripting til  <strong>infrastrukturopgaver </strong> snarere end kompleks systemprogrammering.</p>',
    css: '<p data-with-cutout="true"><i>Stærk praktisk erfaring med moderne CSS – fra grundlæggende layoutteknikker til banebrydende funktioner.</i></p><br/><p>Velbevandret i  <strong>flexbox </strong>,  <strong>grid </strong> og moderne  <strong>scoping-strategier </strong>. Følger aktivt med i opdateringer af CSS-specifikationer og browsersupport for på forsvarlig vis at indføre nye funktioner, samtidig med at jeg opretholder bedste praksis for  <strong>tilgængelighed </strong> og  <strong>progressive forbedringer </strong>.</p><br/><p>Jeg har en solid forståelse af  <strong>cascading </strong> og  <strong>inheritance </strong>, men jeg prioriterer en  <strong>scoped, local-first styling-tilgang </strong> for at undgå kompleksiteten og skrøbeligheden ved globale styles.</p>',
    docker:
      '<p data-with-cutout="true"><i>Praktisk erfaring med Docker til både professionelt arbejde og personlige projekter.</i></p><br/><p>Har professionelt brugt  <strong>Docker Compose </strong> til lokale udviklingsmiljøer og backend-tjenester. Til personlige projekter har jeg erfaring med at  <strong>bygge egne Docker-images </strong>,  <strong>optimere containerstørrelsen </strong> og implementere  <strong>flertrins-builds </strong> til at sikre effektive deployment pipelines.</p><br/><p>Fortrolig med  <strong>container-netværk </strong>,  <strong>volumenstyring </strong> og  <strong>miljøkonfiguration </strong> for at skabe ensartede, reproducerbare miljøer på tværs af forskellige udviklingsstadier.</p>',
    figma:
      '<p data-with-cutout="true"><i>Har erfaring med Figma, både som udvikler der implementerer design og til design af personlige projekter.</i></p><br/><p>Komfortabel med at fortolke professionelle designeres  <strong>designsystemer </strong>,  <strong>komponentspecifikationer </strong> og  <strong>interaktive prototyper </strong>. Til personlige projekter er jeg i stand til at skabe  <strong>grundlæggende designs </strong> og  <strong>funktionelle prototyper </strong> med interaktive elementer, herunder  <strong>overgange </strong> og  <strong>responsive layouts </strong>.</p><br/><p>Værdsætter Figmas  <strong>komponentbaserede tilgang </strong>, der passer godt til moderne arbejdsgange for frontend-udvikling, især i React-økosystemet.</p>',
    gatsby:
      '<p data-with-cutout="true"><i>Omfattende erfaring med Gatsby.js gennem både professionelt arbejde og personlige projekter.</i></p><br/><p>Rutineret i at udvikle  <strong>vedligeholdelsesvenlige statiske websteder </strong> med optimeret  <strong>ydeevne </strong>, implementere avancerede funktioner, herunder  <strong>internationalisering </strong>,  <strong>SEO-optimering </strong>,  <strong>plugin-integration </strong> og  <strong>serverless-funktioner </strong>.</p><br/><p>Selv om jeg har stor erfaring med Gatsby, anbefaler jeg nu moderne alternativer såsom  <strong>Astro </strong> til nye projekter da Gatsbys ikke længere aktivt videreudvikles.</p>',
    git: '<p data-with-cutout="true"><i>Daglig Git-bruger med solid erfaring i at samarbejde i teambaserede workflows.</i></p><br/><p>Komfortabel med at arbejde med både  <strong>merge-baserede </strong> og  <strong>rebase-baserede strategier </strong> afhængigt af teamets præferencer. Har erfaring med at administrere  <strong>feature branches </strong>, løse  <strong>merge-konflikter </strong> og vedligeholde en  <strong>ren, forståelig commit-historik </strong>.</p><br/><p>Sikker Git-bruger til  <strong>kode-review </strong>,  <strong>samarbejde </strong> og  <strong>versionsstyring </strong> i både solo- og teamprojekter.</p>',
    github:
      '<p data-with-cutout="true"><i>Erfaren med at bruge GitHub til både samarbejde og automatisering i personlige projekter og teamprojekter.</i></p><br/><p>Har primært erfaring med GitLab i professionelle sammenhænge, men har praktisk erfaring med at bruge  <strong>GitHub Actions </strong> til at opbygge og administrere  <strong>CI-pipelines </strong> i personlige projekter. Fortrolig med workflows til  <strong>test </strong>,  <strong>udrulning </strong> og  <strong>kvalitetskontrol </strong> af kode.</p><br/><p>Bruger regelmæssigt GitHub til  <strong>versionsstyring </strong>,  <strong>pull request-workflows </strong> og som et centralt sted til styring af open-source og personlige kodebaser.</p>',
    gitlab:
      '<p data-with-cutout="true"><i>Omfattende professionel erfaring med at bruge GitLab som en daglig udviklingsplatform.</i></p><br/><p>Har rutinemæssigt arbejdet med  <strong>GitLab repositories </strong>,  <strong>merge requests </strong> og  <strong>issue tracking </strong> som en del af  <strong>teambaserede workflows </strong>. Komfortabel med at navigere i GitLabs interface og samarbejde gennem  <strong>kode-reviews </strong> og  <strong>branch management </strong>.</p><br/><p>Fortrolig med  <strong>GitLab CI/CD-pipelines </strong> fra et brugerperspektiv – kører job, læser logfiler og arbejder inden for eksisterende arbejdsgange – men ikke direkte ansvarlig for pipelines eller vedligeholdelse af disse.</p>',
    graphql:
      '<p data-with-cutout="true"><i>Omfattende erfaring med at bruge GraphQL fra frontend-siden i moderne webapplikationer.</i></p><br/><p>Arbejder rutinemæssigt med  <strong>queries </strong>,  <strong>mutationer </strong> og  <strong>fragmenter </strong> – ofte i kombination med værktøjer som  <strong>GraphiQL </strong> og  <strong>GraphQL Explorer </strong> til at inspicere skemaer og teste API-kald.</p><br/><p>Komfortabel med at navigere i komplekse skemaer, sammensætte nestede forespørgsler og udnytte bedste praksis for  <strong>ydeevne </strong> og  <strong>vedligeholdelse </strong> på klientsiden.</p>',
    ['graphql-codegen']:
      '<p data-with-cutout="true"><i>Indgående erfaring med at anvende, konfigurere og vedligeholde GraphQL Code Generator på tværs af forskellige kodebaser.</i></p><br/><p>Praktisk erfaring med  <strong>opsætning og konfiguration </strong> af GraphQL Code Generator, herunder generering af  <strong>TypeScript-typer </strong>,  <strong>TypedDocumentNode </strong> og  <strong>operation-specifikke hooks </strong>.</p><br/><p>Stor fokus på  <strong>strukturering af fragments </strong>, navnekonventioner og skalerbar filorganisering — for at sikre let vedligeholdelse selv for komplekse API-strukturer.</p>',
    html: '<p data-with-cutout="true"><strong>Stærkt kendskab til HTML </strong> med fokus på  <strong>semantik </strong>,  <strong>struktur </strong> og  <strong>langsigtet vedligeholdelse </strong>.</p><br/><p>Jeg bruger  <strong>semantiske elementer </strong> som standard for at sikre klarhed i markup og for at understøtte bedste praksis for  <strong>tilgængelighed </strong>. Jeg er tryg ved at arbejde med  <strong>moderne HTML-funktioner </strong> og  <strong>responsive layout-mønstre </strong> på tværs af en bred vifte af projekttyper.</p>',
    inkscape:
      '<p data-with-cutout="true"><i>InkScape er et gratis Open Source-softwareprogram, der minder meget om Adobe Illustrator.<br/><br/>Har erfaring med at bruge Inkscape til at skabe vektorgrafik som ikoner, logoer og brugerdefinerede illustrationer - især til internettet.</i><br/><br/<p>Jeg kombinerer ofte Inkscape med Figma, når jeg arbejder på grafik til personlige projekter, hvor jeg udnytter Inkscapes direkte  <strong>SVG-workflow </strong> og Figmas layoutfunktioner.</p><br/><p>Optimerer  <strong>SVG’er </strong> for ydeevne og problemfri integration i frontend-kodebaser.</p>',
    javascript:
      '<p data-with-cutout="true"><i>Arbejder med JavaScript som en central del af min udviklingsproces, dog typisk gennem TypeScript-kompilering.</i></p><br/><p>Jeg er fortrolig med de  <strong>fundamentale elementer </strong> i JavaScript og dets  <strong>økosystem </strong> og har et stærkt kendskab til  <strong>moderne ES6+ </strong> og  <strong>web-API’er </strong>. Jeg udnytter denne viden til at sikre  <strong>vedligeholdelsesvenlige </strong> og  <strong>effektive </strong> løsninger, mens jeg arbejder på tværs af forskellige  <strong>libraries </strong>,  <strong>frameworks </strong> og  <strong>værktøjer </strong>.</p><br/><p>Selvom jeg hovedsageligt skriver i  <strong>TypeScript </strong> på grund af dets  <strong>stærke typning </strong> og bedre  <strong>tooling </strong>, interagerer jeg ofte direkte med  <strong>JavaScript </strong>, når jeg arbejder med  <strong>biblioteker </strong>,  <strong>frameworks </strong> og  <strong>API’er </strong>, der kræver det.</p>',
    jest: '<p data-with-cutout="true"><i>Solid erfaring med automatiseret unit-testning ved hjælp af Jest og React Testing Library.</i></p><br/><p>Behersker omfattende  <strong>test-coverage </strong> af React- og React Native komponenter, herunder  <strong>mocking af moduler </strong>,  <strong>snapshot- </strong> og  <strong>integrationstest </strong> med forskellige state management- og servicelag. Erfaring med  <strong>testdrevet udviklingspraksis </strong> og  <strong>kontinuerlige integrations-workflows </strong>.</p>',
    mantine:
      '<p data-with-cutout="true"><i>Omfattende erfaring med at arbejde med Mantine-komponentbiblioteket til React-applikationer.</i></p><br/><p>Behersker implementering og tilpasning af  <strong>Mantine UI-komponenter </strong> for at skabe  <strong>elegante brugergrænseflader </strong>. Rutineret i at anvende  <strong>Mantines hook-bibliotek </strong> til almindelige UI-strukturer og udnytte dets  <strong>temasystem </strong> til  <strong>ensartet design-implementation </strong> på tværs af applikationer.</p>',
    nextjs:
      '<p data-with-cutout="true"><i>Professionel erfaring med Next.js kombineret med lidt erfaring fra et personligt projekt.</i></p><br/><p>Erfaring med både den traditionelle  <strong>Pages Router </strong> i produktionsmiljøer samt med den moderne  <strong>App Router-arkitektur </strong>. Erfaring med implementering af  <strong>server-komponenter </strong>,  <strong>server-actions </strong> og udnyttelse af Next.js til  <strong>SSR </strong>-,  <strong>SSG </strong>- og  <strong>ISR-renderingsstrategier </strong>.</p><br/><p> <strong>Behersker </strong> opbygning af  <strong>performante </strong> og  <strong>SEO-optimerede </strong> React-applikationer med Next.js’  <strong>full-stack-funktionalitet </strong>.</p>',
    playwright:
      '<p data-with-cutout="true"><i>Professionel erfaring med Playwright til at skabe automatiserede end-to-end-tests af brugergrænseflader.</i></p><br/><p> <strong>Komfortabel </strong> med at designe og vedligeholde  <strong>UI-testsuits </strong>, der simulerer ægte brugerinteraktion for at sikre funktionalitet, pålidelighed og regressionssikkerhed på tværs af applikations-opdateringer.</p><br/><p>Brug af Playwright i  <strong>samarbejdsworkflows </strong> med udviklere og QA, og integrere det i  <strong>CI-pipelines </strong> for at få konsistent feedback og testdækning af produktionsklare projekter.</p>',
    react:
      '<p data-with-cutout="true"><i>Omfattende professionel erfaring med React på tværs af forskellige store projekter.</i></p><br/><p>Behersker hele React-økosystemet fra  <strong>Class-komponenter </strong> til moderne  <strong>Server-komponenter </strong> med omfattende viden om  <strong>hooks </strong>,  <strong>TypeScript-integration </strong>, forskellige  <strong>styling-tilgange </strong> og teknikker til  <strong>optimering af ydeevne </strong>.<p></p>',
    ['react-native']:
      '<p data-with-cutout="true"><i>Professionel erfaring med React Native, primært med fokus på at bygge komponenter, skrive unit tests med Jest og React Native Testing Library samt Storybook og animationer.</i><br/><br/>Selvom min <strong>praktiske erfaring</strong> ligger nogle år tilbage, har jeg et solidt fundament og ville være begejstret for at genoptage React Native-udvikling på et eller andet tidspunkt.</p>',
    ['react-testing-library']:
      '<p data-with-cutout="true"><i>Behersker React Testing Library til test af komponenter.</i></p><br/><p>Har erfaring med at skrive <b>fokuserede enhedstest</b> til React-komponenter ved hjælp af bedste praksis. Erfaren med RTL’s <b>forespørgselsmetoder</b>, <b>brugerhændelser</b> og <b>tilgængeligheds-testfunktioner</b>.</p><br/><p>Evner at skabe <b>isolerede komponenttests</b>, der verificerer funktionalitet og samtidig giver fleksibilitet i implementeringen, og reserverer end-to-end-test til værktøjer som Playwright.</p>',
    redux:
      '<p data-with-cutout="true"><i>Jeg har praktisk professionel erfaring med <b>klassisk Redux</b> til styring af <b>global applikations-state</b> i produktionsmiljøer.</i></p><br/><p>Jeg er bekendt med at opsætte <b>actions</b> og <b>reducers</b> manuelt og integrere Redux med React gennem <b>react-redux</b>.</p><br/><p>Jeg har også udforsket <b>Redux Toolkit</b> i personlige projekter og sætter pris på dets <b>moderniserede</b> tilgang til at forenkle Redux-mønstre med mindre <b>boilerplate-kode</b> – hvilket virkelig forbedrer <b>udvikler-oplevelsen</b>.</p>',
    sass: '<p data-with-cutout="true"><i>Omfattende erfaring med at bruge Sass/SCSS-præprocessor til styling af webapplikationer.</i></p><br/><p>Behersker brug af  <strong>variabler </strong>,  <strong>mixins </strong>,  <strong>nesting </strong> og  <strong>funktioner </strong> til at skabe vedligeholdelsesvenlige stylingsystemer. Erfaren med at implementere  <strong>modulær arkitektur </strong> og organisere tematisering med  <strong>CSS/Sass-moduler </strong> til skalerbare kodebaser.</br></br>Selvom jeg stadig har ekspertise i Sass, bliver det mindre og mindre relevant i takt med, at  <strong>moderne CSS-funktioner </strong> som native nesting, custom properties og kommende native mixins i stigende grad giver lignende funktionalitet uden forudgående kompilering.</p>',
    storybook:
      '<p data-with-cutout="true"><i>Professionel erfaring med Storybook på tværs af forskellige ansættelser.</i></p><br/><p>Rutineret i  <strong>isoleret komponentudvikling </strong> i React og React Native med fokus på  <strong>dokumentation </strong>,  <strong>visuel testning </strong>,  <strong>teamsamarbejde </strong> gennem delte komponentbiblioteker og  <strong>integration af designsystemer </strong>.</p>',
    ['styled-components']:
      '<p data-with-cutout="true"><i>Omfattende erfaring med at bruge styled-components til styling.</i></p><br/><p>Har erfaring med  <strong>komponentbaseret styling </strong>,  <strong>tematisering </strong> og  <strong>dynamisk styling baseret på props og state </strong> til at skabe konsistente brugergrænseflader med isolerede, genanvendelige mønstre.</p><br/><p>I dag foretrækker jeg dog  <strong>styling-løsninger, der ikke er afhængige af runtime JavaScript </strong>, da det giver en bedre ydeevne i moderne projekter.</p>',
    svg: '<p data-with-cutout="true"><i>Arbejder regelmæssigt med vektorillustrationer og -ikoner som en del af mit job, med et stærkt fokus på optimering af ydeevne og reduktion af filstørrelse.</i></p><br/><p>Jeg har en solid forståelse af, hvordan man justerer <b>SVG-markup</b> for at få et rent og vedligeholdelsesvenligt output, herunder <b>tilgængelighed</b>, <b>præcision</b> og <b>genanvendelighed</b>.</p><br/><p>I personlige projekter har jeg skabt mine egne <b>SVG-illustrationer</b> og <b>-animationer</b>, hvor jeg ofte har tweaket paths og udnyttet <b>indbyggede browserfunktioner</b> for at opnå effektive resultater.</p>',
    tailwind:
      '<p data-with-cutout="true"><i>Praktisk erfaring med at bruge Tailwind CSS i produktionsmiljøer.</i></p><br/><p>Behersker  <strong>utility-first styling </strong>,  <strong>komponent-temaer </strong> og  <strong>responsive designmønstre </strong>. Har med succes implementeret Tailwind i  <strong>store applikationer </strong> ved hjælp af værktøjer som  <strong>tailwind-variants </strong> for at forbedre vedligeholdelsen og konsistens.</p><br/><p>Anerkender både Tailwinds styrker og begrænsninger og kan effektivt udnytte det, når det er det rigtige værktøj til et konkret projekt.</p>',
    tanstack:
      '<p data-with-cutout="true"><i>Praktisk professionel erfaring med udvalgte TanStack-biblioteker i professionelle projekter.</i></p><br/><p>Har primært brugt <b>TanStack Query</b> til effektiv <b>hentning og caching</b>, <b>TanStack Table</b> til at bygge fleksible, headless datatabeller, og har arbejdet med <b>TanStack Start</b> i professionelle sammenhænge.</p><br/><p>Sætter pris på bibliotekernes <b>modulære opbygning</b>, stærke <b>TypeScript-understøttelse</b> og fokus på <b>performance</b> og <b>udvikleroplevelse</b>.</p>',
    turborepo:
      '<p data-with-cutout="true"><i>Har brugt <b>Turborepo</b> professionelt som en del af et monorepo-setup.</i></p><br/><p>Selvom jeg ikke har været dybt involveret i opsætningen, har jeg opnået <b>praktisk erfaring</b> med at arbejde i et Turborepo-baseret workspace som en del af min daglige udviklingsproces — med fordele som caching, pipelines og koordinering på tværs af pakker.</p>',
    typescript:
      '<p data-with-cutout="true"><i>Erfaring med brug af TypeScript i professionelle og personlige projekter på et højt niveau.</i></p><br/><p>Fortrolig med  <strong>avancerede typesystemer </strong>,  <strong>generics </strong>,  <strong>utility-typer </strong> og  <strong>kompleks type-inferens </strong> for at skabe robuste, vedligeholdelsesvenlige kodebaser. Udnytter konsekvent TypeScripts  <strong>statiske analyse </strong> til tidlig fejlfinding og overlegen  <strong>udvikleroplevelse </strong>.</p><br/><p>Er fortaler for  <strong>god type-praksis </strong> og  <strong>veldefinerede typer </strong> der forbedrer kodekvalitet, dokumentation og team-samarbejde.</p>',
    vite: '<p data-with-cutout="true"><i>Praktisk erfaring med Vite som et moderne værktøj til at bygge frontend-applikationer.</i></p><br/><p><b>Fortrolighed</b> med grundlæggende Vite-opsætning i professionelle miljøer og <b>justering af konfigurationer</b>. Erfaring med at bruge Vite som det underliggende <b>build-system</b> til Astro-projekter.</p><br/><p><b>Voksende forståelse</b> for Vites Hot Module Replacement-funktioner og plugin-arkitektur til frontendudvikling workflows.</p>',
    vscode:
      '<p data-with-cutout="true"><i>Mit foretrukne udviklingsmiljø til at skrive- og debugge kode.</i></p><br/><p>Sætter pris på  <strong>udvidelsesmulighederne </strong> og den  <strong>intuitive brugerflade </strong>, der passer perfekt til min arbejdsgang. Værdsætter især den  <strong>integrerede terminal </strong>,  <strong>Git-integrationen </strong> og de  <strong>fleksible debugging-værktøjer </strong>, der tilpasser sig forskellige programmeringssprog.</p><br/><p>Forbedrer løbende min opsætning for at afbalancere performance med de specifikke behov i hvert projekt.</p>',
    webpack:
      '<p data-with-cutout="true"><i>Arbejdskendskab til Webpack til frontend-bundling med konfigurationserfaring.</i></p><br/><p>Erfaring med at udvide <b>WordPress build-konfigurationer</b> og implementere <b>brugerdefinerede indgangspunkter</b> til plugin-udvikling. Professionel erfaring med at <b>vedligeholde Webpack-opsætninger</b> i produktionsmiljøer før overgang til Vite. Fortrolig med <b>TypeScript-integration</b>, <b>SCSS-kompilering</b> og <b>outputoptimering</b>.</p><br/><p>Selvom jeg er kompetent med Webpack, foretrækker jeg nu <b>moderne bundlere</b> såsom Vite på grund af deres forbedrede udvikleroplevelse og ydeevne.</p>',
    wordpress:
      '<p data-with-cutout="true"><i>Praktisk erfaring med moderne WordPress-udvikling i personlige projekter.</i></p><br/><p>Oprettelse af komplet <b>Docker Compose-miljø</b> til WordPress-udvikling og -deployment. Implementering af <b>headless WordPress-arkitektur</b> med <b>WP-GraphQL</b>, integration med <b>Next.js frontend</b>, herunder <b>ISR</b>, <b>preview-funktionalitet</b> og <b>autentificering</b>.</p><br/><p>Erfaring med <b>Gutenberg-blokke</b>, <b>brugerdefinerede skabeloner</b> og <b>tredjepartsintegrationer</b> (Cloudinary, Algolia). Kendskab til <b>automatiseret WordPress-opsætning</b> ved hjælp af <b>Composer</b> og <b>WP-CLI</b>, men skiftede i sidste ende væk fra WordPress på grund af begrænsninger i økosystemet.</p>',
    ['wp-graphql']:
      '<p data-with-cutout="true"><i>Detaljeret erfaring med WP-GraphQL i headless WordPress-applikationer.</i></p><br/><p>Erfaring med at implementere <b>GraphQL-forespørgsler</b> til forskellige WordPress-indholdstyper som <b>sider</b>, <b>indlæg</b>, <b>menuer</b> og <b>medier</b>. Arbejdet med <b>TypeScript-integrationer</b> og automatisk typegenerering via <b>GraphQL Code Generator</b> for stærk typesikkerhed.</p><br/><p>Bygget systemer til <b>forhåndsvisning af upubliceret indhold</b>, håndtering af <b>autentificering</b> og styring af <b>SEO-metadata</b> fra Yoast gennem <b>GraphQL’s API</b>.</p>',
  } satisfies Record<TechSkill, string>,
} as const;
