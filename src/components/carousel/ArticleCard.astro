---
import type { CardInfo } from './Carousel.astro';
import styles from './carousel.module.css';
import PictureWithPlaceholder from '../picture/PictureWithPlaceholder.astro';

type Props = Omit<CardInfo, 'imageSrc' | 'href'> & {
  index: number;
  image: ImageMetadata;
  withBorderGlow?: boolean;
};

const {
  title,
  description,
  date,
  imageAlt,
  outline,
  index,
  image,
  withBorderGlow,
} = Astro.props;
---

<script>
  const { carouselList } = window;

  const articleList: HTMLElement[] = Array.from(
    document.querySelectorAll('article')
  );
  /**
   * Updates the cursor position in the carousel wrapper element.
   */
  const updateCursor = (event: PointerEvent) => {
    if (carouselList && event.target instanceof HTMLElement) {
      const rect = event.target.getBoundingClientRect();
      carouselList.style.setProperty('--x', `${event.clientX - rect.left}`);
      carouselList.style.setProperty('--y', `${event.clientY - rect.top}`);
    }
  };

  articleList.map((article) => {
    if (
      article.dataset.withBorderGlow === 'false' ||
      article.dataset.initialized === 'true'
    ) {
      return;
    }
    article.dataset.initialized = 'true';
    article.addEventListener('pointermove', updateCursor, {
      passive: true,
    });
  });
</script>
<article
  class={`${styles[`outline${outline}`]} ${styles.article}`}
  data-with-border-glow={withBorderGlow}
>
  <PictureWithPlaceholder
    formats={['avif', 'webp']}
    quality="high"
    src={image}
    alt={imageAlt}
    width="232"
    height="148"
    densities={[1, 2, 3]}
    loading="lazy"
    decoding="async"
    classNames={{ placeholder: styles.placeholder }}
  />
  <div class={styles.newsContent}>
    <div>
      <h3>{title}</h3>
      <p id={`articleDescription${index}`}>{description}</p>
    </div>
    <div class={styles.date}>
      <p>{date}</p>
    </div>
  </div>
  {withBorderGlow && <div class={styles.borderGlow} />}
</article>
