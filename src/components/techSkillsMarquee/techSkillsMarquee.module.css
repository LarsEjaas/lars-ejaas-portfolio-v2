.marquee {
  view-transition-name: skill-marquee;
  container-type: inline-size;
  border-radius: var(--border-radius-md);
  container-name: marquee;
  transform-style: preserve-3d;
  width: 100%;
  margin-inline: auto;
  max-width: 720px;
  height: fit-content;
  &:has(a:focus-visible) {
    outline: 2px dashed var(--system-dark-100);
  }
}

.scene {
  --height: calc((var(--grid-row-count) - 3) * 54px);
  --mask-width: 3rem;
  /* Inset and outset controls the grid animation offset on entry/exit */
  --inset: -0.5;
  --outset: 3.5;
  --speed: 9s;
  --items-in-row: 3;
  --grid-row-count: round(
    up,
    calc(var(--number-of-items) / var(--items-in-row))
  );
  @media (min-width: 640px) {
    &:hover .skill {
      animation-play-state: paused;
    }
  }
  &:focus-within .skill {
    animation-play-state: paused;
  }
  &:has(a:focus-visible) {
    --inset: -2;
    mask: unset;
  }
  height: var(--height);
  content-visibility: auto;
  contain-intrinsic-size: auto 100% auto var(--height);
  scroll-behavior: smooth;
  overflow: hidden;
  width: 100%;
  mask:
    linear-gradient(
      transparent,
      white var(--mask-width) calc(100% - var(--mask-width)),
      transparent
    ),
    linear-gradient(
      90deg,
      transparent,
      white var(--mask-width) calc(100% - var(--mask-width)),
      transparent
    );
  mask-composite: intersect;
  @media (hover) and (prefers-reduced-motion: no-preference) {
    &:hover .skill:not(:hover) > a:not([data-active='true']),
    &:has(:focus-within) a:not(:focus-visible):not([data-active='true']) {
      & .outline {
        background-color: light-dark(
          var(--system-light-300),
          var(--system-light-400)
        );
        --gradient-tone-1: var(--gradient-tone-3);
        --gradient-tone-2: var(--gradient-tone-4);
      }
      & .skillImage {
        opacity: 0.5;
      }
    }
  }
}

.skillsGrid {
  display: grid;
  transform-style: preserve-3d;
  height: 100%;
  width: fit-content;
  margin-block: 0;
  margin-inline: auto;
  list-style-type: none;
  position: relative;
  padding-left: 1rem;
  grid-template-columns: repeat(var(--items-in-row), 1fr);
  column-gap: 1rem;
  /* 3D translation */
  transform: rotateX(48deg) rotateZ(-6deg) skewX(6deg);
  transition: transform 400ms ease-in-out;
  /* Add margin to make all items visible when navigating with keyboard */
  margin-block: calc((var(--items-in-row) - 1.5) * 1rem);
  &:has(a:focus-visible) {
    transform: unset;
    margin-block: calc() unset;
    transform: translateY(calc(var(--outset, 0) * 96px));
    height: calc((var(--grid-row-count)) * 96px);
    justify-items: flex-end;
  }
}

.skill {
  transform-style: preserve-3d;
  position: relative;
  z-index: calc(1 + var(--active));
  --transition: 150ms;
  --row-index: round(down, calc(var(--index) / var(--items-in-row)));
  --duration: calc(var(--speed) * 2);
  --delay: calc(
    (var(--duration) / var(--grid-row-count)) *
      (var(--row-index, 0) - calc(var(--grid-row-count)))
  );
  @media (prefers-reduced-motion: no-preference) {
    /*Delay the animation to after fade in*/
    animation: slide var(--duration) calc(var(--delay) + 600ms) linear infinite;
    translate: 0%
      calc(
        ((var(--grid-row-count) - var(--row-index)) + var(--inset, 0)) * 100%
      );
  }
  &::before {
    content: '';
    position: absolute;
    inset: 4px 4px -2px -2px;
    border-radius: 40%;
    background: var(--system-shadow-1);
    filter: blur(calc(var(--active, 0.15) * 3px));
    z-index: -1;
    transition:
      scale var(--transition),
      opacity var(--transition),
      translate var(--transition),
      filter var(--transition);
    transform-origin: 50% 0;
    scale: 1 calc(1 + (var(--active, 0) * 0.05));
    box-shadow: var(--stacks-6-shadow);
  }
  &[data-placeholder]::before {
    background: var(--system-shadow-5);
    z-index: -2;
  }
  &:hover:not([data-placeholder]),
  &:focus-within:not([data-placeholder]),
  &:has(a[data-active]) {
    --active: 1;
  }
  & a {
    display: block;
    transition:
      transform var(--transition) cubic-bezier(0, 0, 0, 1),
      scale var(--transition) cubic-bezier(0, 0, 0, 1);
    scale: calc(1 + (var(--active, 0) * 0.1));
    transform: translateZ(calc(var(--active, 0) * 8px));
    &:focus-visible {
      border-radius: 30%;
      outline-offset: var(--outline-offset);
    }
  }
  a[data-active] {
    pointer-events: none;
    /* &::after {
      content: '';
      position: absolute;
      z-index: -1;
      inset: -4px;
      clip-path: url('#squircle');
      background-color: var(--system-dark-100);
    } */
  }
  & :global(.squircle) {
    clip-path: url(#squircle);
    display: block;

    &.outline {
      transition: background-color 0ms 200ms ease-in-out;
      --gradient-tone-1: light-dark(
        var(--system-light-100),
        var(--system-dark-100)
      );
      --gradient-tone-2: light-dark(
        var(--system-light-100),
        var(--system-light-500)
      );
      --gradient-tone-3: light-dark(
        var(--system-light-300),
        var(--system-light-400)
      );
      --gradient-tone-4: light-dark(
        var(--system-light-400),
        var(--system-light-300)
      );
      background-image:
        radial-gradient(
          ellipse at 70% 10%,
          color-mix(in hsl, var(--gradient-tone-1), transparent 40%) 0%,
          color-mix(in hsl, var(--gradient-tone-2), transparent 50%) 60%,
          transparent 100%
        ),
        linear-gradient(
          to bottom,
          transparent 0%,
          color-mix(in hsl, var(--gradient-tone-3), transparent 80%) 25%,
          color-mix(in hsl, var(--gradient-tone-4), transparent 60%) 85%
        );
      background-color: var(--gradient-tone-3);
      line-height: 0;
    }
  }
  & .skillImage {
    transition: opacity 200ms 0ms ease-in-out;
    width: 80px;
    height: 80px;
  }
}

@container marquee (width >= 400px) {
  .scene {
    --items-in-row: 4;
    --speed: 8s;
    --height: calc((var(--grid-row-count) - 1) * 54px);
  }
}

@container marquee (width >= 500px) {
  .scene {
    --items-in-row: 5;
    --speed: 7s;
  }
}

@container marquee (width >= 640px) {
  .scene {
    --items-in-row: 6;
    --speed: 5s;
  }
  .skillsGrid:focus-within {
    padding-left: 0;
  }
  .skill .skillImage {
    width: 96px;
    height: 96px;
  }
}

@keyframes slide {
  100% {
    translate: 0% calc((var(--row-index) + var(--outset, 0)) * -100%);
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    /* Avoid visual glitches from mix-blend-mode by animating opacity from 0.01 instead of 0 */
    opacity: 0.01;
  }
  to {
    opacity: 1;
  }
}

::view-transition-old(skill-marquee) {
  animation: 300ms fadeOut ease-in-out both;
}

::view-transition-new(skill-marquee) {
  animation: 300ms fadeIn 300ms ease-in-out both;
}
