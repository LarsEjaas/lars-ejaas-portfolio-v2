---
import { Picture } from 'astro:assets';
import styles from './presentationCard.module.css';
import type { ColorVariants } from '@customTypes/index';
import Card from '@components/card/Card.astro';

type Props = {
  title: string;
  gradientColor: Exclude<ColorVariants, 'bluemunsell'>;
  inert: boolean;
  iconImage?: ImageMetadata | undefined;
  iconImageAlt?: string | undefined;
  overlayImage?: ImageMetadata;
  overlayImageAlt?: string;
  /** Make the squircle and overlay image size responsive */
  responsiveSquircleSize?: boolean;
};

const {
  iconImage,
  title,
  gradientColor,
  overlayImage,
  responsiveSquircleSize,
  iconImageAlt,
  overlayImageAlt,
  inert,
} = Astro.props;
---

<Card inert={inert}>
  <div
    class={styles.header}
    data-princeton={gradientColor === 'princeton' ? 'true' : undefined}
    data-verdigris={gradientColor === 'verdigris' ? 'true' : undefined}
    data-flirt={gradientColor === 'flirt' ? 'true' : undefined}
    data-aquamarine={gradientColor === 'aquamarine' ? 'true' : undefined}
  >
    <div class={styles.headerContent}>
      <h2>{title}</h2>
      <div
        class={styles.iconContent}
        data-responsive={responsiveSquircleSize ? 'true' : undefined}
      >
        {
          (overlayImage || iconImage) && (
            <div
              class={`${styles.outline} squircle`}
              data-responsive={responsiveSquircleSize ? 'true' : undefined}
              data-with-background={iconImage ? 'true' : undefined}
            >
              {iconImage ? (
                <figure aria-label={iconImageAlt}>
                  <div
                    class={styles.icon}
                    style={{
                      backgroundImage: `url(${iconImage.src})`,
                    }}
                  />
                </figure>
              ) : (
                <div
                  class={`${styles.gradientBackground} squircle`}
                  data-princeton={
                    gradientColor === 'princeton' ? 'true' : undefined
                  }
                  data-verdigris={
                    gradientColor === 'verdigris' ? 'true' : undefined
                  }
                  data-flirt={gradientColor === 'flirt' ? 'true' : undefined}
                  data-aquamarine={
                    gradientColor === 'aquamarine' ? 'true' : undefined
                  }
                />
              )}
            </div>
          )
        }
        {
          overlayImage && (
            <Picture
              formats={['avif', 'webp']}
              quality="high"
              src={overlayImage}
              alt={overlayImageAlt}
              widths={
                responsiveSquircleSize
                  ? [80, 160, 240, 136, 272, 408]
                  : [72, 144, 216]
              }
              sizes={
                responsiveSquircleSize
                  ? '(max-width: 482px) 80px, (max-width: 768px) 136px, (max-width: 995px) 80px, 136px'
                  : '72px'
              }
              loading="eager"
              decoding="sync"
              pictureAttributes={{
                ['data-responsive']: responsiveSquircleSize
                  ? 'true'
                  : undefined,
                style: `aspect-ratio: ${overlayImage.width}/${overlayImage.height};${responsiveSquircleSize ? '' : 'width: 72px;'}`,
                class: styles.overlayImage,
              }}
            />
          )
        }
      </div>
    </div>
  </div>
  <div
    class={styles.cardContent}
    data-with-cutout={responsiveSquircleSize && overlayImage
      ? 'true'
      : undefined}
  >
    <slot />
  </div>
</Card>
