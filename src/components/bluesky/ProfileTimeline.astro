---
import type { BlueskyData } from '@scripts/utils';
import Popover from '../popover/Popover.astro';
import styles from './bluesky.module.css';
import type { ImageModule } from '@customTypes/index';
import PictureWithPlaceholder from '@components/picture/PictureWithPlaceholder.astro';
import AvatarProfile from './AvatarProfile.astro';

const blueskyImages = import.meta.glob('@assets/bluesky/*.{jpg,jpeg,png}');

type Props = {
  profile: BlueskyData['profile'];
};

const { profile } = Astro.props;

if (!profile?.avatar) {
  throw new Error(`No Bluesky profile avatar found for: ${profile.avatar}`);
}

const avatar = profile.avatar;

const imageImport = Object.entries(blueskyImages).find(([path]) =>
  path.includes(avatar)
);

if (!imageImport) {
  throw new Error(`No Bluesky profile avatar found for: ${avatar}`);
}
const ImageComponent = ((await imageImport[1]()) as ImageModule).default;
---

<aside class={styles.profileTimeline}>
  <Popover
    width={320}
    position="top"
    id={'1234'}
    buttonLabel={''}
    classNames={{
      button: styles.profileButton,
      wrapper: styles.profileWrapper,
    }}
    buttonAttributes={{
      ['data-arrow-nav']: 'true',
      role: 'menuitem',
      slot: 'buttonContent',
    }}
  >
    <Fragment slot="buttonContent">
      <PictureWithPlaceholder
        alt="Profile picture of the author"
        formats={['avif', 'webp']}
        quality="high"
        src={ImageComponent}
        widths={[48, 96, 144]}
        sizes="48px"
        loading="eager"
        decoding="sync"
        placeholderSettings={{ width: 8, blurSigma: 0.5 }}
        classNames={{
          placeholder: styles.profilePlaceholder,
        }}
      />
    </Fragment>
    <AvatarProfile
      description={profile.description}
      handle={profile.handle}
      displayName={profile.displayName}
      avatar={ImageComponent}
      followersCount={profile.followersCount}
      followsCount={profile.followsCount}
    />
  </Popover>
  <div class={styles.timelineDivider}></div>
  <svg width="12" height="14" viewBox="0 0 12 14" fill="none">
    <path
      d="M1 1.5L6 6.5L11 1.5"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
    <path
      d="M1 7.5L6 12.5L11 7.5"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
  </svg>
</aside>
