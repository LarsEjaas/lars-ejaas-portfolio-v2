---
import type { Language } from '@i18n/settings';
import type { BlueskyData } from '@scripts/utils';
import Card from '@components/card/Card.astro';
import PictureWithPlaceholder from '@components/picture/PictureWithPlaceholder.astro';
import type { CamelCaseString, KebabCaseString } from '@customTypes/index';
import IconBluesky from '@assets/someIcons/bluesky.png';
import styles from './bluesky.module.css';
import BlueskyThread from './BlueskyThread.astro';
import { useTranslations } from '@i18n/utils';
import { constructBlueskyThreads } from './utils';
import ProfileTimeline from './ProfileTimeline.astro';

type Props<T extends string = string, U extends string = string> = {
  lang: Language;
  inert: boolean;
  feed: BlueskyData['threads'];
  profile: BlueskyData['profile'];
  viewTransitionName: KebabCaseString<T>;
  /** Unique identifier for this card. Should be written in camelCase
   * This can also be used as an anchor to go directly to this card.
   */
  id: CamelCaseString<U>;
};

const { lang, inert, feed, profile, viewTransitionName, id } = Astro.props;
const t = useTranslations(lang, 'navigation');

const processedThreads = constructBlueskyThreads(feed);
---

<script>
  import { setupPaginationScroll } from '@components/workCard/utils';
  setupPaginationScroll();
</script>
<Card
  as="aside"
  viewTransitionName={viewTransitionName}
  inert={inert}
  className={styles.card}
>
  <div class={`${styles.blueSkyIcon} squircle`} data-with-shadow="true">
    <PictureWithPlaceholder
      aria-hidden="true"
      formats={['avif', 'webp']}
      quality="high"
      src={IconBluesky}
      alt=""
      widths={[96, 192, 288]}
      sizes="96px"
      loading="eager"
      decoding="sync"
      classNames={{
        placeholder: styles.butterflyPlaceholder,
      }}
    />
  </div>
  <div class={styles.cardContent}>
    {
      processedThreads.length > 1 && (
        <a
          class={styles.skipLink}
          href={`#pagination${processedThreads[0]?.recordKey}`}
        >
          {t('skip_to_developer_tips_pagination')}
        </a>
      )
    }
    <div class={styles.butterfly} aria-hidden="true"></div>
    <ProfileTimeline profile={profile} />
    <ul tabindex={-1} class={styles.feedList}>
      {
        processedThreads.map((thread) => (
          <BlueskyThread
            thread={thread}
            lang={lang}
            displayName={profile.displayName}
          />
        ))
      }
    </ul>
    <div
      id={`${id}footerNavigation`}
      role={processedThreads.length > 1 ? 'menubar' : undefined}
      aria-keyshortcuts="ArrowLeft ArrowRight"
      class={styles.pagination}
    >
      <div
        style={{
          '--slide-length': feed?.length,
        }}
        class={styles.controls}
      >
        {
          processedThreads.length > 1 &&
            processedThreads.map((thread, index) => (
              <div class={styles.control}>
                <a
                  href={`#${thread.recordKey}`}
                  role="menuitem"
                  data-arrow-nav={
                    processedThreads.length > 1 ? 'true' : undefined
                  }
                  id={index === 0 ? `pagination${thread.recordKey}` : undefined}
                  title={`${t('scroll_to_tip')} ${index + 1}`}
                >
                  <p class="sr-only">{`${t('scroll_to_tip')} ${index + 1}`}</p>
                </a>
              </div>
            ))
        }
      </div>
    </div>
  </div>
</Card>
