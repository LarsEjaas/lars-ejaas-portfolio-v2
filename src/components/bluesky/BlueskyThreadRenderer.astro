---
import {
  renderPostContentAsHTML,
  type RichTextRenderConfig,
} from './richTextRenderUtils';
import type { ProcessedBlueskyThread } from './utils';
import styles from './bluesky.module.css';
import PostEmbed from './PostEmbed.astro';

type Props = {
  thread: ProcessedBlueskyThread;
};

const { thread } = Astro.props;

const embed = thread?.mainPost.embed;

export const threadConfig: RichTextRenderConfig = {
  classNames: {
    container: `body-text ${styles.postContent}`,
    link: styles.postLink,
    hashtag: styles.postHashtag,
  },
  attributes: {
    link: { 'data-type': 'external-link' },
    hashtag: (segment) => ({ 'data-tag': segment.content.replace('#', '') }),
  },
};
---

<section class={styles.threadContent}>
  <Fragment
    set:html={renderPostContentAsHTML(thread?.mainPost, threadConfig)}
  />
  <PostEmbed embed={embed} />
  {
    thread.replies.map((reply) => {
      const content = renderPostContentAsHTML(reply, threadConfig);
      const replyEmbed = reply.embed;
      return (
        <>
          <div class={styles.divider} />
          <Fragment class={styles.reply} set:html={content} />
          <PostEmbed embed={replyEmbed} />
        </>
      );
    })
  }
</section>
