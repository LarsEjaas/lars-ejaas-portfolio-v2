.balloon {
  position: absolute;
  filter: drop-shadow(var(--stacks-balloon-shadow));
  aspect-ratio: 1;
  border-radius: var(--border-radius-balloon);
  overflow: hidden;
  animation-name: moveBalloon;
  animation-duration: var(--duration);
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
  animation-play-state: paused;
  /* Fallback if the browser doesn't support linear ease */
  animation-timing-function: cubic-bezier(0.17, 0.67, 0.4, 1.31);
  /* GSAP sine.out ease*/
  animation-timing-function: linear(
    0 0%,
    0.2861 18.47%,
    0.4829 32.08%,
    0.6437 44.52%,
    0.7712 56.07%,
    0.8722 67.47%,
    0.9115 73.02%,
    0.9434 78.49%,
    0.9682 83.91%,
    0.9859 89.3%,
    0.9965 94.66%,
    1 100%
  );
  &:global(#two) {
    left: 5%;
    top: 10%;
    width: 20%;
    z-index: 2;
  }
  &:global(#three) {
    z-index: 4;
    position: relative;
    & picture,
    & img {
      width: 100%;
      height: 100%;
    }
  }
  &:global(#four) {
    left: 50%;
    top: 60%;
    transform: rotate(20deg);
    width: 40%;
    z-index: 3;
  }
  &[data-princeton] {
    &:global(#two) {
      position: absolute;
      left: 5%;
      top: 10%;
      width: 20%;
      z-index: 2;
    }
    &:global(#three) {
      color: black;
    }
    &:global(#four) {
      color: black;
    }
  }
  &[data-verdigris] {
    &:global(#two) {
      background-color: var(--verdigris-400);
    }
    &:global(#three) {
      left: 10%;
      top: 0%;
      width: 90%;
    }
    &:global(#four) {
      background-color: var(--verdigris-500);
      transform: rotate(20deg);
      left: 50%;
      top: 60%;
      width: 40%;
      z-index: 3;
    }
  }
  &[data-flirt] {
    &:global(#two) {
    }
    &:global(#three) {
    }
    &:global(#four) {
    }
  }
  &[data-aquamarine] {
    &:global(#two) {
    }
    &:global(#three) {
    }
    &:global(#four) {
    }
  }
  &[data-bluemunsell] {
    &:global(#two) {
    }
    &:global(#three) {
    }
    &:global(#four) {
    }
  }
}

@keyframes moveBalloon {
  0% {
    transform: translate3d(var(--xA), var(--yA), 0);
  }
  50% {
    transform: translate3d(calc(0.5 * var(--xB)), calc(0.5 * var(--yA)), 0);
  }
  100% {
    transform: translate3d(var(--xB), var(--yB), 0);
  }
}
