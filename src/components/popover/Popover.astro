---
import { capitalize } from '@utils/misc';
import styles from './popover.module.css';
import { getLangFromUrl, useTranslations } from '@i18n/utils';

type Props = {
  /** Unique identifier for this popver. Should be written in camelCase */
  id: string;
  /** Accessibility label for the popover button */
  buttonLabel: string;
  /** Placement of the popover relative to the target-button */
  position?: 'top' | 'bottom';
  /** Width of the popover - defaults to 300px */
  width?: number;
};

const { id, buttonLabel, position = 'bottom', width = 300 } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang, 'navigation');

/** popover button have tabindex=0 as this is needed in Safari to set focus on the button */
---

<script>
  //   fallback for browsers without anchor support
  if (!CSS.supports('anchor-name: --a')) {
    const popoverElements = document.querySelectorAll('div[id^="popover"]');

    Array.from(popoverElements).map((popover) => {
      const id = popover.id.replace('popover', '');
      const popoverButton = document.querySelector(`#popover${id}Button`);
      const wrapper = popover.parentElement;

      if (
        popover instanceof HTMLDivElement &&
        popoverButton instanceof HTMLButtonElement &&
        wrapper
      ) {
        const calculatePosition = () => {
          const rect = wrapper.getBoundingClientRect();
          popover.style.top = `calc(${rect.top + rect.height + window.scrollY}px + 0.5rem)`;
          popover.style.left = `${rect.left}px`;
        };
        popoverButton.addEventListener('click', calculatePosition);
        window.addEventListener('resize', calculatePosition);
      }
    });
  }
</script>
<div class={styles.popoverWrapper} style={{ 'anchor-name': `--${id};` }}>
  <button
    class={styles.button}
    popovertarget=`popover${capitalize(id)}`
    id=`popover${capitalize(id)}Button`
    aria-label={buttonLabel}
    tabindex="0"
  >
    <slot name="buttonContent" />
  </button>
  <div
    id=`popover${capitalize(id)}`
    class={styles.popover}
    data-position={position}
    data-width={width}
    style={{ '--anchor-id': `--${id}`, '--width': `${width}px` }}
    popover
  >
    <button
      class={styles.closeButton}
      popovertarget=`popover${capitalize(id)}`
      title={t('close_popover')}
      aria-label={t('close_popover')}
      ><svg
        xmlns="http://www.w3.org/2000/svg"
        width="12"
        height="12"
        viewBox="0 0 16 16"
        aria-hidden="true"
      >
        <path
          d="M11.0327 8L15.5814 3.45136C16.1395 2.89318 16.1395 1.98818 15.5814 1.42955L14.5705 0.418636C14.0123 -0.139545 13.1073 -0.139545 12.5486 0.418636L8 4.96727L3.45136 0.418636C2.89318 -0.139545 1.98818 -0.139545 1.42955 0.418636L0.418636 1.42955C-0.139545 1.98773 -0.139545 2.89273 0.418636 3.45136L4.96727 8L0.418636 12.5486C-0.139545 13.1068 -0.139545 14.0118 0.418636 14.5705L1.42955 15.5814C1.98773 16.1395 2.89318 16.1395 3.45136 15.5814L8 11.0327L12.5486 15.5814C13.1068 16.1395 14.0123 16.1395 14.5705 15.5814L15.5814 14.5705C16.1395 14.0123 16.1395 13.1073 15.5814 12.5486L11.0327 8Z"
          fill="currentColor"
          opacity="0.8"></path>
      </svg></button
    >
    <slot />
  </div>
</div>
