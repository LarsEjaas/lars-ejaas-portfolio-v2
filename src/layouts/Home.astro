---
import type { Language } from '@i18n/settings';
import Layout from '@layouts/Root.astro';
import Carousel from '@components/carousel/Carousel.astro';
import { newsItems } from '@content/newsItems';
import FloatingBalloons from '@components/floatingBalloons/FloatingBalloons.astro';
import EjaasLogoFront from '@assets/images/ejaas_logo_front.png';
import PageLabel from '@components/pageLabel/PageLabel.astro';
import { removeTrailingSlash, useTranslations } from '@i18n/utils';
import { appRoutes } from '@i18n/routes';
import PresentationCard from '@components/presentationCard/PresentationCard.astro';
import styles from './home.module.css';
import ProfileImage from '@assets/images/profile_clip.png';
import SocialLinks from '@components/socialLinks/SocialLinks.astro';
import AboutIcon from '@components/icons/AboutIcon.astro';
import DownloadIcon from '@components/icons/DownloadIcon.astro';
import IconContact from '@assets/menuIcons/contact.png';
import { Picture } from 'astro:assets';
import Sparkle from '@components/sparkle/Sparkle.astro';
import type { DistributiveOmit } from '@customTypes/index';
import type { OpenGraph } from '@customTypes/seo';
import { getPublicFiles } from '../utils/publicFileValidator';

/** Add a key that easily identifies the latest resume - located in public/resume */
const LATEST_RESUME_KEY = 'july_2024';

type Props = {
  title: string;
  description: string;
  lang: Language;
  inert: boolean;
  seo: { openGraph: DistributiveOmit<OpenGraph, 'type'>; noIndex?: boolean };
};

const resumeFiles = getPublicFiles('resume');

// Get the correct  resume PDF file
const latestResumeURL = resumeFiles
  ? Object.values(resumeFiles).find((filePath) =>
      filePath.includes(LATEST_RESUME_KEY)
    )
  : undefined;

if (!latestResumeURL) {
  throw new Error(`No resume file found for ${latestResumeURL}`);
}

const { title, description, lang, inert, seo } = Astro.props;
const t_home = useTranslations(lang, 'home');
const contactUrl = `${removeTrailingSlash(Astro.url.pathname)}/${appRoutes[lang].contact}/`;
---

<Layout
  inert={inert}
  seo={{
    metaData: { title, description },
    openGraph: {
      image: {
        name: seo.openGraph.image.name,
        alt: seo.openGraph.image.alt,
      },
    },
    ...(seo.noIndex && { noIndex: seo.noIndex }),
  }}
>
  <!-- Modals can be inserted as a child here in the slot -->
  <slot slot="body-top" />
  <div class="presentation">
    <PageLabel title={title} iconImage="ejaas" />
    <div>
      <h2>
        {t_home('hi_my_name_is')}
      </h2>
      <p class="body-text">{t_home('a_developer_driven')}</p>
    </div>
    <PresentationCard
      gradientColor="verdigris"
      title="Lars Ejaas"
      overlayImage={ProfileImage}
      overlayImageAlt={t_home('profile_lars_alt')}
      inert={inert}
    >
      <div class={styles.presentationCardContent}>
        <h3 class="stylized-capitalized-text">
          {t_home('frontend_developer')}
        </h3>
        <p
          class="small-body-text"
          set:html={t_home('frontend_developer_description')}
        />
        <div class={styles.contactContainer}>
          <Sparkle>
            <a
              id="contactButton"
              data-arrow-nav="true"
              href={contactUrl}
              title={t_home('contact')}
              aria-label={t_home('contact')}
              class={styles.outline}
            >
              <div class={styles.contact}>
                <div class="squircle" data-with-shadow="true">
                  <Picture
                    aria-hidden="true"
                    formats={['avif', 'webp']}
                    quality="high"
                    src={IconContact}
                    alt=""
                    width={40}
                    height={40}
                    densities={[1, 2, 3]}
                    loading="eager"
                    decoding="sync"
                    pictureAttributes={{
                      style: 'filter: grayscale(0.7);',
                    }}
                  />
                </div>
                <p
                  class="small-body-text"
                  set:html={t_home('got_something_on')}
                />
              </div>
            </a>
          </Sparkle>
        </div>
        <div class={styles.actions}>
          <div class={styles.actionEntries}>
            <a href="/about" title={t_home('about_me_title')}>
              <AboutIcon />
              <p>{t_home('about_me')}</p>
            </a>
            <a
              href={latestResumeURL}
              download
              title={t_home('download_resume_title')}
            >
              <DownloadIcon className={styles.downloadIcon} />
              <p>{t_home('download_resume')}</p>
            </a>
          </div>
          <SocialLinks alternativeColors={true} onCard={true} />
        </div>
      </div>
    </PresentationCard>
  </div>
  <FloatingBalloons balloonColor="verdigris" coverPhoto={EjaasLogoFront} />
  <Carousel
    labels={{
      title: t_home('news_title'),
      archiveTitle: t_home('news_archive_title'),
      previous: t_home('previous'),
      next: t_home('next'),
    }}
    items={newsItems[lang]}
    inert={inert}
  />
</Layout>
